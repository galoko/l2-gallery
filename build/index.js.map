{"version":3,"file":"index.js","sources":["../src/renderer.ts","../src/database.ts","../src/main.ts"],"sourcesContent":["import * as THREE from \"three\"\r\nimport { MeshoptDecoder } from \"three/examples/jsm/libs/meshopt_decoder.module\"\r\nimport { GLTF, GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\"\r\nimport { ModelDesc } from \"./database\"\r\n\r\ndeclare global {\r\n    interface Window {\r\n        MeshoptDecoder: typeof MeshoptDecoder\r\n    }\r\n}\r\n\r\nconst ANGLE_TRANSITION_RATE = Math.PI * 2 // per second\r\nconst ANIM_TRANSITION_TIME = 0.2\r\n\r\n\r\nconst TWO_PI = Math.PI * 2\r\n\r\nfunction normalizeAngle(angle: number) {\r\n    while (angle < 0) angle += TWO_PI\r\n    while (angle >= TWO_PI) angle -= TWO_PI\r\n    return angle\r\n}\r\n\r\nexport class Model {\r\n    private mixer: THREE.AnimationMixer\r\n    private actions: THREE.AnimationAction[] = []\r\n    private currentAction?: THREE.AnimationAction\r\n\r\n    private rotation = 0\r\n    private currentRotation = 0\r\n\r\n    private processedTime = 0\r\n    private currentTime = 0\r\n\r\n    private dest?: THREE.Vector2\r\n\r\n    onArrival?: (model: Model) => void\r\n\r\n    constructor(private readonly desc: ModelDesc, private readonly gltf: GLTF) {\r\n        this.mixer = new THREE.AnimationMixer(gltf.scene)\r\n        for (const anim of gltf.animations) {\r\n            const action = this.mixer.clipAction(anim)\r\n            this.actions.push(action)\r\n        }\r\n    }\r\n\r\n    getPos() {\r\n        return new THREE.Vector2(this.gltf.scene.position.x, this.gltf.scene.position.z)\r\n    }\r\n\r\n    tick(dt: number) {\r\n        this.mixer.update(dt)\r\n\r\n        this.currentTime += dt\r\n\r\n        const STATIC_DT = 1 / 60\r\n        while (this.currentTime - this.processedTime >= 0) {\r\n            this.processedTime += STATIC_DT\r\n\r\n            let movementSpeed = 0\r\n            const currentClipName = this.currentAction?.getClip().name\r\n            if (currentClipName?.startsWith(\"Run\")) {\r\n                movementSpeed = this.desc.runSpeed\r\n            } else if (currentClipName?.startsWith(\"Walk\")) {\r\n                movementSpeed = this.desc.walkSpeed\r\n            }\r\n\r\n            const movement = (movementSpeed / 100) * STATIC_DT\r\n            if (movement > 0) {\r\n                const delta = new THREE.Vector3(0, 0, movement)\r\n                delta.applyAxisAngle(new THREE.Vector3(0, 1, 0), this.rotation)\r\n                this.gltf.scene.position.add(delta)\r\n            }\r\n\r\n            if (this.currentRotation !== this.rotation) {\r\n                const currentAngle = normalizeAngle(this.currentRotation)\r\n                const targetAngle = normalizeAngle(this.rotation)\r\n            \r\n                let angleDifference = targetAngle - currentAngle\r\n                if (angleDifference > Math.PI) {\r\n                    angleDifference -= TWO_PI // Go counter-clockwise\r\n                } else if (angleDifference < -Math.PI) {\r\n                    angleDifference += TWO_PI // Go clockwise\r\n                }\r\n            \r\n                const maxAngleChange = ANGLE_TRANSITION_RATE * STATIC_DT\r\n                const sign = angleDifference >= 0 ? 1 : -1\r\n            \r\n                let newAngle: number\r\n                if (Math.abs(angleDifference) > maxAngleChange) {\r\n                    newAngle = normalizeAngle(currentAngle + sign * maxAngleChange)\r\n                } else {\r\n                    newAngle = this.rotation\r\n                }\r\n            \r\n                this.currentRotation = newAngle\r\n                this.gltf.scene.setRotationFromAxisAngle(new THREE.Vector3(0, 1, 0), newAngle)\r\n            }\r\n\r\n            if (this.dest !== undefined) {\r\n                const pos = this.getPos()\r\n                const dist = pos.distanceTo(this.dest)\r\n                if (movementSpeed === 0 || dist < 0.1) {\r\n                    this.dest = undefined\r\n                    this.onArrival?.(this)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    show() {\r\n        shownModels.add(this)\r\n        scene.add(this.gltf.scene)\r\n    }\r\n\r\n    hide() {\r\n        shownModels.delete(this)\r\n        scene.remove(this.gltf.scene)\r\n    }\r\n\r\n    destroy() {\r\n        const {gltf, mixer } = this\r\n        if (gltf.scene) {\r\n            gltf.scene.traverse( (object) => {\r\n                if (object instanceof THREE.Mesh) {\r\n                    object.geometry.dispose()\r\n        \r\n                    if (object.material.isMaterial) {\r\n                        object.material.dispose()\r\n                    } else if (Array.isArray(object.material)) {\r\n                        // In case of multi-materials\r\n                        object.material.forEach(material => material.dispose())\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        if (mixer) {\r\n            mixer.stopAllAction()\r\n            this.actions.forEach(action => action.stop())\r\n        }\r\n    }\r\n\r\n    play(animName: string) {\r\n        const newAction = this.actions.find(a => a.getClip().name.startsWith(animName))\r\n        if (!newAction) {\r\n            console.warn(\"Animation not found:\", animName)\r\n            return \r\n        }\r\n\r\n        if (this.currentAction === newAction) {\r\n            return\r\n        }\r\n    \r\n        if (this.currentAction && this.currentAction !== newAction) {\r\n            this.currentAction.fadeOut(ANIM_TRANSITION_TIME)\r\n            newAction.reset().fadeIn(ANIM_TRANSITION_TIME).play()\r\n        } else {\r\n            newAction.reset().play()\r\n        }\r\n    \r\n        this.currentAction = newAction\r\n    }\r\n\r\n    actionTo(actionName: string, x: number, z: number) {\r\n        this.dest = new THREE.Vector2(x, z)\r\n        const pos = this.getPos()\r\n\r\n        const angle = Math.atan2(this.dest.x - pos.x, this.dest.y - pos.y)\r\n\r\n        this.rotation = angle\r\n\r\n        this.play(actionName)\r\n    }\r\n}\r\n\r\nconst clock = new THREE.Clock()\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true })\r\nconst scene = new THREE.Scene()\r\nconst camera = new THREE.PerspectiveCamera()\r\nconst shownModels = new Set<Model>()\r\n\r\nexport function setupScene() {\r\n    scene.background = new THREE.Color(0xffffff)\r\n\r\n    camera.fov = 50\r\n    camera.near = 0.1\r\n    camera.far = 1000\r\n\r\n    renderer.shadowMap.enabled = true\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap\r\n\r\n    const handleResize = () => {\r\n        camera.aspect = window.innerWidth / window.innerHeight\r\n        camera.updateProjectionMatrix()\r\n        renderer.setPixelRatio(window.devicePixelRatio)\r\n        renderer.setSize(window.innerWidth, window.innerHeight)\r\n    }\r\n    handleResize()\r\n\r\n    // setup basic stuff\r\n\r\n    const ambientLight = new THREE.AmbientLight(0xebebeb)\r\n    const light = new THREE.DirectionalLight(0xffffff, 1)\r\n    light.position.set(10, 10, -10)\r\n    light.castShadow = true\r\n\r\n    light.shadow.mapSize.width = 4096 * 4\r\n    light.shadow.mapSize.height = 4096 * 4\r\n    light.shadow.camera.near = 0.001\r\n    light.shadow.camera.far = 50\r\n\r\n    scene.add(ambientLight, light)\r\n\r\n    camera.position.set(1.7, 1.3, 1.3)\r\n    camera.lookAt(new THREE.Vector3(0, 0, 0))\r\n\r\n    const planeGeometry = new THREE.PlaneGeometry(5, 5)\r\n    const planeMaterial = new THREE.MeshStandardMaterial({ color: 0x0000ff })\r\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial)\r\n    plane.rotateX(-Math.PI / 2)\r\n    plane.receiveShadow = true\r\n    scene.add(plane)\r\n\r\n    window.addEventListener(\"resize\", handleResize)\r\n    document.body.appendChild(renderer.domElement)\r\n\r\n    requestAnimationFrame(tick)\r\n}\r\n\r\nfunction tick() {\r\n    const timeSpeed = 1\r\n\r\n    requestAnimationFrame(tick)\r\n\r\n    const dt = clock.getDelta() / timeSpeed\r\n    for (const model of shownModels) {\r\n        model.tick(dt)\r\n    }\r\n\r\n    renderer.render(scene, camera)\r\n}\r\n\r\nexport async function loadModel(desc: ModelDesc): Promise<Model> {\r\n    return new Promise((resolve, reject) => {\r\n        const loader = new GLTFLoader()\r\n        loader.setMeshoptDecoder(window.MeshoptDecoder)\r\n        loader.load(\r\n            `build/Models/${desc.name}.glb`,\r\n            gltf => {\r\n                // to enable shadows\r\n                gltf.scene.traverse(node => {\r\n                    if (node instanceof THREE.Mesh) {\r\n                        node.castShadow = true\r\n                    }\r\n                })\r\n\r\n                const model = new Model(desc, gltf)\r\n                resolve(model)\r\n            },\r\n            undefined,\r\n            reject\r\n        )\r\n    })\r\n}\r\n","type Usage = {\r\n    id: number\r\n    name: string\r\n    lvl: number\r\n}\r\n\r\nexport type ModelDesc = {\r\n    name: string\r\n    walkSpeed: number\r\n    runSpeed: number\r\n    colRadius: number\r\n    colHeight: number\r\n    usages: Usage[]\r\n}\r\n\r\nexport type Database = {\r\n    models: ModelDesc[]\r\n}\r\n\r\nexport let database: Database\r\n\r\nexport async function loadDatabase() {  \r\n    database = await (await fetch(\"build/database.json\")).json()\r\n}","import { loadModel, Model, setupScene } from \"./renderer\"\r\nimport { database, loadDatabase } from \"./database\"\r\nimport * as THREE from \"three\"\r\n\r\nlet num = 0\r\nconst preloadedModels: (Model | null)[] = [null, null, null]\r\nlet loading  = false\r\n\r\nfunction normalizeNum(num: number) {\r\n    if (num < 0) num += database.models.length\r\n    if (num >= database.models.length) num -= database.models.length\r\n    return num\r\n}\r\n\r\nasync function showModel(direction: number) {\r\n    if (loading) {\r\n        return\r\n    }\r\n    loading = true\r\n\r\n    // current model\r\n    const modelToHide = preloadedModels[1]\r\n    if (modelToHide) {\r\n        modelToHide.hide()\r\n    }\r\n\r\n    num = normalizeNum(num + direction)\r\n    if (num < 0) num += database.models.length\r\n    if (num >= database.models.length) num -= database.models.length\r\n    localStorage.setItem(\"num\", num.toString())\r\n\r\n    let preloadPromise: Promise<void> | null = null\r\n\r\n    let modelToUnload: Model | null = null\r\n    if (direction === 1) {\r\n        modelToUnload = preloadedModels.shift() ?? null   \r\n        if (modelToUnload) {\r\n            modelToUnload.destroy()\r\n        }\r\n        // allocate next\r\n        preloadedModels.push(null)\r\n\r\n        const nextDesc = database.models[normalizeNum(num + 1)]\r\n        preloadPromise = loadModel(nextDesc).then(nextModel => {\r\n            preloadedModels[2] = nextModel\r\n        })\r\n    } else if (direction === -1) {\r\n        modelToUnload = preloadedModels.pop() ?? null\r\n        // allocate prev\r\n        preloadedModels.unshift(null)\r\n\r\n        const nextDesc = database.models[normalizeNum(num - 1)]\r\n        preloadPromise = loadModel(nextDesc).then(prevModel => {\r\n            preloadedModels[0] = prevModel\r\n        })\r\n    }\r\n    if (modelToUnload) {\r\n        modelToUnload.destroy()\r\n    }\r\n\r\n    let modelToShow = preloadedModels[1]\r\n    if (!modelToShow) {\r\n        const desc = database.models[num]\r\n        modelToShow = await loadModel(desc)\r\n        preloadedModels[1] = modelToShow\r\n    }\r\n    modelToShow.play(\"Wait\")\r\n    modelToShow.show()\r\n\r\n    let agitated = false\r\n    function action() {\r\n        modelToShow!.play(agitated ? \"AtkWait\" : \"Wait\")\r\n\r\n        setTimeout(() => {\r\n            if (Math.random() < 0.5) {\r\n                agitated = !agitated\r\n            }\r\n\r\n            // eslint-disable-next-line no-constant-condition\r\n            while (true) {\r\n                const newPos = new THREE.Vector2(-2 + Math.random() * 4, -2 + Math.random() * 4)\r\n                const currentPos = modelToShow!.getPos()\r\n                if (newPos.distanceTo(currentPos) > 1) {\r\n                    modelToShow!.actionTo(agitated ? \"Run\" : \"Walk\", newPos.x, newPos.y)\r\n                    break\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    modelToShow.onArrival = action\r\n    action()\r\n\r\n    if (preloadPromise) {\r\n        await preloadPromise\r\n    }\r\n    loading = false\r\n}\r\n\r\nasync function main() {\r\n    // TODO show loader\r\n\r\n    await loadDatabase()\r\n\r\n    setupScene()\r\n\r\n    num = parseInt(localStorage.getItem(\"num\") ?? \"0\")\r\n    showModel(0)\r\n    document.body.onkeydown = async e => {\r\n        if (e.key === \"PageDown\") {\r\n            showModel(1)\r\n        } else if (e.key === \"PageUp\") {\r\n            showModel(-1)\r\n        }     \r\n    }\r\n}\r\n\r\nmain()\r\n"],"names":[],"mappings":"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"}